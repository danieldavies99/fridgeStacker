{"version":3,"file":"main.js","mappings":"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","sources":["webpack://excalibur-webpack/webpack/runtime/chunk loaded","webpack://excalibur-webpack/./src/scenes/level-one/level-one.ts","webpack://excalibur-webpack/./src/actors/fridges/fridge2x4.ts","webpack://excalibur-webpack/./src/actors/truck/truck.ts","webpack://excalibur-webpack/./src/actors/fridges/fridge4x2.ts","webpack://excalibur-webpack/./src/actors/fridges/fridge4x4.ts","webpack://excalibur-webpack/./src/index.ts","webpack://excalibur-webpack/webpack/bootstrap","webpack://excalibur-webpack/webpack/runtime/define property getters","webpack://excalibur-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://excalibur-webpack/webpack/runtime/jsonp chunk loading","webpack://excalibur-webpack/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Engine, Scene } from 'excalibur';\n\n/**\n * Managed scene\n */\nexport class LevelOne extends Scene {\n  public onInitialize(engine: Engine) {}\n  public onActivate() {}\n  public onDeactivate() {}\n}\n","import { Actor, CollisionType, Color, vec } from 'excalibur';\nimport { Resources } from '../../resources';\nimport { Fridge } from './fridge';\n\nexport class Fridge2x4 extends Actor implements Fridge {\n  private hasLanded = false;\n\n  private gameWidth: number;\n  private gameHeight: number;\n\n  private isBouncy: boolean = false;\n  constructor(\n    gameWidth: number,\n    gameHeight: number,\n    isBouncy: boolean,\n  ) {\n    let lightness = 255 - (255 * (Math.random() / 2));\n    let color = isBouncy ? new Color(175, 162, 255) : new Color(lightness, lightness, lightness)\n    super({\n      pos: vec(gameWidth / 2, 50),\n      width: 40,\n      height: 80,\n      color: color\n    });\n    this.isBouncy = isBouncy;\n    this.gameWidth = gameWidth;\n    this.gameHeight = gameHeight;\n  }\n  onInitialize() {\n    this.body.collisionType = CollisionType.Active\n    this.body.bounciness = this.isBouncy ? 0.75 : 0.05;\n\n    this.on(\"collisionstart\", () => {\n      this.land();\n    })\n\n    this.onPostUpdate = () => {\n      if(this.isOutOfBounds()) {\n        this.land();\n      }\n    }\n  }\n\n  isOutOfBounds() {\n    return this.pos.x > this.gameWidth || this.pos.x < 0 || this.pos.y > this.gameHeight || this.pos.y < 0;\n  }\n\n  snapLeft() {\n    this.pos.x -= 40;\n  }\n\n  snapRight() {\n    this.pos.x += 40;\n  }\n\n  land() {\n    this.hasLanded = true;\n  }\n\n  getHasLanded(): boolean {\n    return this.hasLanded\n  }\n}\n","import { Actor, CollisionType, Color, CompositeCollider, Polygon, Raster, Rectangle, Shape, vec } from 'excalibur';\nimport { Resources } from '../../resources';\n\nconst truckCollider = new CompositeCollider([\n    Shape.Box(240, 80, vec(.5, 0)),\n    Shape.Box(80, 80, vec(1.5, 1),)\n])\n\nclass TruckBody extends Polygon {\n  constructor() {\n    super({\n      points: [\n        vec(0,0),\n        vec(80,0),\n        vec(80,80),\n        vec(240,80),\n        vec(240,160),\n        vec(0,160),\n        vec(0, 80)\n      ],\n      color: new Color(232, 72, 85)\n    });\n  }\n}\n\nexport class Truck extends Actor {\n  constructor(\n    gameWidth: number,\n    gameHeight: number\n  ) {\n    super({\n      pos: vec(gameWidth, gameHeight - 100),\n      width: 300,\n      height: 80,\n      collider: truckCollider,\n    });\n  }\n\n  onInitialize() {\n\n    const truckBody = new TruckBody\n    this.graphics.use(truckBody);\n\n    this.body.collisionType = CollisionType.Fixed\n    this.body.bounciness = 0.05;\n    this.vel = vec(-20, 0)\n  }\n}\n","import { Actor, CollisionType, Color, vec } from 'excalibur';\nimport { Resources } from '../../resources';\nimport { Fridge } from './fridge';\n\nexport class Fridge4x2 extends Actor implements Fridge {\n  private hasLanded = false;\n\n  private gameWidth: number;\n  private gameHeight: number;\n\n  private isBouncy: boolean = false;\n  constructor(\n    gameWidth: number,\n    gameHeight: number,\n    isBouncy: boolean,\n  ) {\n    let lightness = 255 - (255 * (Math.random() / 2));\n    let color = isBouncy ? new Color(175, 162, 255) : new Color(lightness, lightness, lightness)\n    super({\n      pos: vec(gameWidth / 2, 50),\n      width: 80,\n      height: 40,\n      color: color\n    });\n    this.isBouncy = isBouncy;\n    this.gameWidth = gameWidth;\n    this.gameHeight = gameHeight;\n  }\n\n  onInitialize() {\n    this.body.collisionType = CollisionType.Active;\n    this.body.bounciness = this.isBouncy ? 0.75 : 0.05;\n\n    this.on(\"collisionstart\", () => {\n      this.land();\n    })\n\n    this.onPostUpdate = () => {\n      if(this.isOutOfBounds()) {\n        this.land();\n      }\n    }\n  }\n\n  isOutOfBounds() {\n    return this.pos.x > this.gameWidth || this.pos.x < 0 || this.pos.y > this.gameHeight || this.pos.y < 0;\n  }\n\n  snapLeft() {\n    this.pos.x -= 40;\n  }\n\n  snapRight() {\n    this.pos.x += 40;\n  }\n\n  land() {\n    this.hasLanded = true;\n  }\n\n  getHasLanded(): boolean {\n    return this.hasLanded\n  }\n}\n","import { Actor, CollisionType, Color, vec } from 'excalibur';\nimport { Resources } from '../../resources';\nimport { Fridge } from './fridge';\n\nexport class Fridge4x4 extends Actor implements Fridge {\n  private hasLanded = false;\n\n  private gameWidth: number;\n  private gameHeight: number;\n\n  private isBouncy: boolean = false;\n\n  constructor(\n    gameWidth: number,\n    gameHeight: number,\n    isBouncy: boolean\n  ) {\n    let lightness = 255 - (255 * (Math.random() / 2));\n    let color = isBouncy ? new Color(175, 162, 255) : new Color(lightness, lightness, lightness)\n    super({\n      pos: vec(gameWidth / 2, 50),\n      width: 80,\n      height: 80,\n      color: color\n    });\n    this.isBouncy = isBouncy;\n    this.gameWidth = gameWidth;\n    this.gameHeight = gameHeight;\n  }\n\n  onInitialize() {\n    this.body.collisionType = CollisionType.Active;\n    this.body.bounciness = this.isBouncy ? 0.75 : 0.05;\n\n    this.on(\"collisionstart\", () => {\n      this.land();\n    })\n\n    this.onPostUpdate = () => {\n      if(this.isOutOfBounds()) {\n        this.land();\n      }\n    }\n  }\n\n  isOutOfBounds() {\n    return this.pos.x > this.gameWidth || this.pos.x < 0 || this.pos.y > this.gameHeight || this.pos.y < 0;\n  }\n\n  snapLeft() {\n    this.pos.x -= 40;\n  }\n\n  snapRight() {\n    this.pos.x += 40;\n  }\n\n  land() {\n    this.hasLanded = true;\n  }\n\n  getHasLanded(): boolean {\n    return this.hasLanded\n  }\n}\n","import { Engine, Loader, DisplayMode, Physics, vec, Color } from 'excalibur';\nimport { LevelOne } from './scenes/level-one/level-one';\nimport { Resources } from './resources';\nimport { Fridge2x4 } from './actors/fridges/fridge2x4';\nimport { Truck } from './actors/truck/truck';\nimport { Fridge } from './actors/fridges/fridge';\nimport { Fridge4x2 } from './actors/fridges/fridge4x2';\nimport { Fridge4x4 } from './actors/fridges/fridge4x4';\nimport { Fridge5x4 } from './actors/fridges/fridge5x4';\n\n\n/**\n * Managed game class\n */\nclass Game extends Engine {\n  private fridges: Fridge[] = [];\n  private truck: Truck;\n\n  private levelOne: LevelOne;\n\n  private newFridgeQueued: boolean = false;\n\n  constructor() {\n    super({\n      displayMode: DisplayMode.FitScreen,\n      suppressPlayButton: true,\n      backgroundColor: new Color(43,58,103)\n    });\n  }\n\n  private spawnNewFridge() {\n    this.newFridgeQueued = false;\n    const rand = Math.random();\n    const shouldBounce = Math.random() < 0.1;\n    let fridge: Fridge;\n    if(rand < 0.33) {\n      fridge = new Fridge2x4(\n        this.drawWidth,\n        this.drawHeight,\n        shouldBounce\n      );\n    } else if (rand < 0.66 ) {\n      fridge = new Fridge4x2(\n        this.drawWidth,\n        this.drawHeight,\n        shouldBounce\n      );\n    } else {\n      fridge = new Fridge4x4(\n        this.drawWidth,\n        this.drawHeight,\n        shouldBounce\n      );\n    }\n    // else {\n    //   fridge = new Fridge5x4(\n    //     this.drawWidth,\n    //     this.drawHeight,\n    //     shouldBounce\n    //   )\n    // }\n    this.fridges.push(fridge);\n    this.levelOne.add(this.fridges[this.fridges.length - 1])\n  }\n\n  private getCurrentFridge(): Fridge {\n    const newFridge = this.fridges[this.fridges.length - 1];\n    return newFridge;\n  }\n\n  public start() {\n\n    // Create new scene with a fridge\n    this.levelOne = new LevelOne();\n\n    this.spawnNewFridge();\n  \n    this.truck = new Truck(this.drawWidth, this.drawHeight);\n    this.levelOne.add(this.truck);\n\n    game.input.keyboard.on(\"press\", (evt) => {\n      if (\n        (evt.key === \"ArrowLeft\" || evt.key === \"KeyA\")\n        && !this.getCurrentFridge().getHasLanded()\n      ) {\n        this.getCurrentFridge().snapLeft();\n      }\n\n      if (\n        (evt.key === \"ArrowRight\" || evt.key === \"KeyD\")\n        && !this.getCurrentFridge().getHasLanded()\n      ) {\n        this.getCurrentFridge().snapRight();\n      }\n    })\n\n    game.add('levelOne', this.levelOne);\n\n    // Automatically load all default resources\n    // const loader = new Loader(Object.values(Resources));\n\n    this.levelOne.onPostUpdate = () => {\n      if (this.getCurrentFridge().getHasLanded() && !this.newFridgeQueued) {\n        this.newFridgeQueued = true;\n        setTimeout(() => {\n          this.spawnNewFridge();\n        }, (1000));\n      }\n    }\n\n    return super.start();\n  }\n}\n\nconst game = new Game();\nPhysics.useRealisticPhysics();\nPhysics.acc = vec(0, 200);\n\ngame.start().then(() => {\n  game.goToScene('levelOne');\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkexcalibur_webpack\"] = self[\"webpackChunkexcalibur_webpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [882], () => (__webpack_require__(92)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","LevelOne","onInitialize","engine","onActivate","onDeactivate","Fridge2x4","constructor","gameWidth","gameHeight","isBouncy","lightness","Math","random","color","super","pos","width","height","hasLanded","this","body","collisionType","bounciness","on","land","onPostUpdate","isOutOfBounds","x","y","snapLeft","snapRight","getHasLanded","truckCollider","TruckBody","points","Truck","collider","truckBody","graphics","use","vel","Fridge4x2","Fridge4x4","Game","displayMode","suppressPlayButton","backgroundColor","fridges","newFridgeQueued","spawnNewFridge","rand","shouldBounce","fridge","drawWidth","drawHeight","push","levelOne","add","length","getCurrentFridge","start","truck","game","input","keyboard","evt","key","setTimeout","then","goToScene","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}